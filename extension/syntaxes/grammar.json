{
  "scopeName": "inline.tagged-template-sql",
  "injectionSelector": "L:source -comment -string",
  "patterns": [
    {
      "begin": "\\b(sql|sqlFragment)\\s*(?=`)",
      "beginCaptures": {
        "0": { "name": "string.template.ts" },
        "1": { "name": "entity.name.function.tagged-template.ts" }
      },
      "end": "(?<=`)",
      "patterns": [{ "include": "#embedded-sql" }]
    },
    {
      "begin": "\\b(sql|sqlFragment)\\s*(?=(\\?\\.\\s*)?(<\\s*(((keyof|infer|typeof)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\'[^\\']*\\')|(\\\"[^\\\"]*\\\")|(\\`[^\\`]*\\`))(?=\\s*([\\<\\>\\,\\.\\[]|=>|&(?!&)|\\|(?!\\|)))))([^<>\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?<==)\\>|\\<\\s*(((keyof|infer|typeof)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\'[^\\']*\\')|(\\\"[^\\\"]*\\\")|(\\`[^\\`]*\\`))(?=\\s*([\\<\\>\\,\\.\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^<>\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?<==)\\>|\\<\\s*(((keyof|infer|typeof)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\'[^\\']*\\')|(\\\"[^\\\"]*\\\")|(\\`[^\\`]*\\`))(?=\\s*([\\<\\>\\,\\.\\[]|=>|&(?!&)|\\|(?!\\|)))))([^<>\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?<==)\\>)*(?<!=)\\>))*(?<!=)\\>)*(?<!=)>\\s*)?\\()",
      "beginCaptures": {
        "1": { "name": "meta.function-call.ts entity.name.function.ts" }
      },
      "end": "(?<=`)",
      "patterns": [
        { "include": "source.ts#comment" },
        {
          "name": "meta.function-call.ts punctuation.accessor.optional.ts",
          "match": "\\?\\."
        },
        { "include": "source.ts#type-arguments" },
        { "include": "source.ts#paren-expression" },
        { "include": "#embedded-sql" }
      ]
    }
  ],
  "repository": {
    "embedded-sql": {
      "name": "string.template.ts",
      "contentName": "meta.embedded.block.sql",
      "begin": "`",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.template.begin.js" }
      },
      "end": "`",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.template.end.js" }
      },
      "patterns": [
        { "include": "source.ts#template-substitution-element" },
        { "include": "source.sql" },
        { "include": "source.plpgsql.postgres" },
        { "match": "." }
      ]
    }
  }
}
